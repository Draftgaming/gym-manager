// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(GymContext))]
    partial class GymContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.16");

            modelBuilder.Entity("DataAccess.Models.ProgressRecord", b =>
                {
                    b.Property<int>("ProgressRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Bmi")
                        .HasColumnType("REAL");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("TraineeId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("ProgressRecordId");

                    b.HasIndex("TraineeId");

                    b.ToTable("ProgressRecords");

                    b.HasData(
                        new
                        {
                            ProgressRecordId = -1,
                            Bmi = 24.5,
                            Notes = "Initial assessment",
                            RecordDate = new DateTime(2025, 5, 27, 7, 44, 17, 909, DateTimeKind.Utc).AddTicks(1562),
                            TraineeId = -1,
                            Weight = 75.0
                        },
                        new
                        {
                            ProgressRecordId = -2,
                            Bmi = 24.199999999999999,
                            Notes = "First-week progress",
                            RecordDate = new DateTime(2025, 6, 3, 7, 44, 17, 909, DateTimeKind.Utc).AddTicks(1565),
                            TraineeId = -1,
                            Weight = 74.0
                        },
                        new
                        {
                            ProgressRecordId = -3,
                            Bmi = 22.0,
                            Notes = "Initial assessment",
                            RecordDate = new DateTime(2025, 5, 31, 7, 44, 17, 909, DateTimeKind.Utc).AddTicks(1566),
                            TraineeId = -2,
                            Weight = 68.0
                        });
                });

            modelBuilder.Entity("DataAccess.Models.Trainee", b =>
                {
                    b.Property<int>("TraineeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateJoined")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("TrainerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrainingPlanId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("TraineeId");

                    b.HasIndex("TrainerId");

                    b.HasIndex("TrainingPlanId");

                    b.ToTable("Trainees");

                    b.HasData(
                        new
                        {
                            TraineeId = -1,
                            DateJoined = new DateTime(2025, 4, 10, 7, 44, 17, 909, DateTimeKind.Utc).AddTicks(1469),
                            FullName = "Alex Johnson",
                            Password = "password123",
                            Role = "User",
                            TrainerId = -1,
                            TrainingPlanId = -1,
                            Username = "alexjohnson"
                        },
                        new
                        {
                            TraineeId = -2,
                            DateJoined = new DateTime(2025, 5, 10, 7, 44, 17, 909, DateTimeKind.Utc).AddTicks(1480),
                            FullName = "Maria Garcia",
                            Password = "password123",
                            Role = "User",
                            TrainerId = -2,
                            TrainingPlanId = -2,
                            Username = "mariagarcia"
                        },
                        new
                        {
                            TraineeId = -3,
                            DateJoined = new DateTime(2025, 3, 10, 7, 44, 17, 909, DateTimeKind.Utc).AddTicks(1482),
                            FullName = "David Lee",
                            Password = "password123",
                            Role = "User",
                            TrainerId = -1,
                            TrainingPlanId = -1,
                            Username = "davidlee"
                        },
                        new
                        {
                            TraineeId = -4,
                            DateJoined = new DateTime(2025, 4, 30, 7, 44, 17, 909, DateTimeKind.Utc).AddTicks(1484),
                            FullName = "Emily Clark",
                            Password = "password123",
                            Role = "User",
                            TrainerId = -2,
                            TrainingPlanId = -2,
                            Username = "emilyclark"
                        },
                        new
                        {
                            TraineeId = -5,
                            DateJoined = new DateTime(2025, 3, 26, 7, 44, 17, 909, DateTimeKind.Utc).AddTicks(1489),
                            FullName = "Samuel Brown",
                            Password = "password123",
                            Role = "User",
                            TrainerId = -1,
                            TrainingPlanId = -1,
                            Username = "samuelbrown"
                        },
                        new
                        {
                            TraineeId = -6,
                            DateJoined = new DateTime(2025, 3, 26, 7, 44, 17, 909, DateTimeKind.Utc).AddTicks(1491),
                            FullName = "Admin Admin",
                            Password = "password123",
                            Role = "Administrator",
                            TrainerId = -1,
                            TrainingPlanId = -1,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("DataAccess.Models.Trainer", b =>
                {
                    b.Property<int>("TrainerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Specialty")
                        .HasColumnType("TEXT");

                    b.HasKey("TrainerId");

                    b.ToTable("Trainers");

                    b.HasData(
                        new
                        {
                            TrainerId = -1,
                            Name = "John Doe",
                            Specialty = "Strength Training"
                        },
                        new
                        {
                            TrainerId = -2,
                            Name = "Jane Smith",
                            Specialty = "Cardio & Endurance"
                        });
                });

            modelBuilder.Entity("DataAccess.Models.TrainingPlan", b =>
                {
                    b.Property<int>("TrainingPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlanName")
                        .HasColumnType("TEXT");

                    b.HasKey("TrainingPlanId");

                    b.ToTable("TrainingPlans");

                    b.HasData(
                        new
                        {
                            TrainingPlanId = -1,
                            Description = "Basic strength exercises",
                            PlanName = "Beginner Strength"
                        },
                        new
                        {
                            TrainingPlanId = -2,
                            Description = "High-intensity cardio workouts",
                            PlanName = "Cardio Blast"
                        });
                });

            modelBuilder.Entity("DataAccess.Models.ProgressRecord", b =>
                {
                    b.HasOne("DataAccess.Models.Trainee", "Trainee")
                        .WithMany("ProgressRecords")
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("DataAccess.Models.Trainee", b =>
                {
                    b.HasOne("DataAccess.Models.Trainer", "Trainer")
                        .WithMany("Trainees")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.TrainingPlan", "TrainingPlan")
                        .WithMany("Trainees")
                        .HasForeignKey("TrainingPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trainer");

                    b.Navigation("TrainingPlan");
                });

            modelBuilder.Entity("DataAccess.Models.Trainee", b =>
                {
                    b.Navigation("ProgressRecords");
                });

            modelBuilder.Entity("DataAccess.Models.Trainer", b =>
                {
                    b.Navigation("Trainees");
                });

            modelBuilder.Entity("DataAccess.Models.TrainingPlan", b =>
                {
                    b.Navigation("Trainees");
                });
#pragma warning restore 612, 618
        }
    }
}
